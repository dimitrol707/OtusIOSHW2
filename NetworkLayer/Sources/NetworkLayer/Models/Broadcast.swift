//
// Broadcast.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Broadcast Details */
public struct Broadcast: Codable, JSONEncodable, Hashable {

    /** Day of the week */
    public var day: String?
    /** Time in 24 hour format */
    public var time: String?
    /** Timezone (Tz Database format https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) */
    public var timezone: String?
    /** Raw parsed broadcast string */
    public var string: String?

    public init(day: String? = nil, time: String? = nil, timezone: String? = nil, string: String? = nil) {
        self.day = day
        self.time = time
        self.timezone = timezone
        self.string = string
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case day
        case time
        case timezone
        case string
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(day, forKey: .day)
        try container.encodeIfPresent(time, forKey: .time)
        try container.encodeIfPresent(timezone, forKey: .timezone)
        try container.encodeIfPresent(string, forKey: .string)
    }
}

