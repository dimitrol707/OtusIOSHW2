//
// PaginationPlusPagination.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PaginationPlusPagination: Codable, JSONEncodable, Hashable {

    public var lastVisiblePage: Int?
    public var hasNextPage: Bool?
    public var items: PaginationPlusPaginationItems?

    public init(lastVisiblePage: Int? = nil, hasNextPage: Bool? = nil, items: PaginationPlusPaginationItems? = nil) {
        self.lastVisiblePage = lastVisiblePage
        self.hasNextPage = hasNextPage
        self.items = items
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case lastVisiblePage = "last_visible_page"
        case hasNextPage = "has_next_page"
        case items
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(lastVisiblePage, forKey: .lastVisiblePage)
        try container.encodeIfPresent(hasNextPage, forKey: .hasNextPage)
        try container.encodeIfPresent(items, forKey: .items)
    }
}

